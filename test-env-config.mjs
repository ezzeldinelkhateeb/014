#!/usr/bin/env node

// Quick test script to verify environment setup and API configurations
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

console.log('üîç Environment Configuration Test');
console.log('================================');

// Check Bunny.net API Key
const bunnyApiKey = process.env.VITE_BUNNY_API_KEY;
console.log('\nüü¢ Bunny.net API Configuration:');
console.log(`  ‚úÖ API Key: ${bunnyApiKey ? 'SET' : '‚ùå MISSING'}`);
if (bunnyApiKey) {
  console.log(`  üìè Length: ${bunnyApiKey.length} characters`);
  console.log(`  üîí Masked: ${bunnyApiKey.substring(0, 8)}...${bunnyApiKey.substring(-4)}`);
  console.log(`  ‚úÖ Format: ${bunnyApiKey.match(/^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/i) ? 'Valid UUID' : '‚ùå Invalid'}`);
}

// Check Supabase Configuration
console.log('\nüü° Supabase Database Configuration:');
const supabaseUrl = process.env.SUPABASE_URL || process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
const postgresUrl = process.env.POSTGRES_URL;

console.log(`  üåê URL: ${supabaseUrl ? 'SET' : '‚ùå MISSING'}`);
console.log(`  üîë Anon Key: ${supabaseAnonKey ? 'SET' : '‚ùå MISSING'}`);
console.log(`  üîê Service Key: ${supabaseServiceKey ? 'SET' : '‚ùå MISSING'}`);
console.log(`  üóÑÔ∏è Postgres URL: ${postgresUrl ? 'SET' : '‚ùå MISSING'}`);

if (supabaseUrl) {
  console.log(`  üìç Project: ${supabaseUrl.replace('https://', '').replace('.supabase.co', '')}`);
}

// Check Google Sheets Configuration (Optional)
console.log('\nüîµ Google Sheets Configuration (Optional):');
const sheetsSpreadsheetId = process.env.GOOGLE_SHEETS_SPREADSHEET_ID;
const sheetsCredentials = process.env.GOOGLE_SHEETS_CREDENTIALS_JSON;
console.log(`  üìä Spreadsheet ID: ${sheetsSpreadsheetId ? 'SET' : '‚ùå MISSING'}`);
console.log(`  üîê Credentials: ${sheetsCredentials ? 'SET' : '‚ùå MISSING'}`);

// Overall Status
const criticalConfigs = [bunnyApiKey, supabaseUrl, supabaseAnonKey];
const allCriticalSet = criticalConfigs.every(config => !!config);

console.log('\nüìã Overall Status:');
console.log(`  ${allCriticalSet ? '‚úÖ READY' : '‚ùå NOT READY'} - ${allCriticalSet ? 'All critical configurations are set' : 'Missing critical configurations'}`);

if (!allCriticalSet) {
  console.log('\nüîß Required Actions:');
  if (!bunnyApiKey) console.log('  ‚Ä¢ Set VITE_BUNNY_API_KEY environment variable');
  if (!supabaseUrl) console.log('  ‚Ä¢ Set SUPABASE_URL or NEXT_PUBLIC_SUPABASE_URL environment variable');
  if (!supabaseAnonKey) console.log('  ‚Ä¢ Set NEXT_PUBLIC_SUPABASE_ANON_KEY environment variable');
}

console.log('\nüöÄ Ready for deployment to Vercel and GitHub!');
console.log('================================');